/*
 * File: app/view/main/Main.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ext5.view.main.Main', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.main',

    requires: [
        'ext5.view.main.MainViewModel',
        'ext5.view.main.MainViewController',
        'ext5.view.Header',
        'ext5.view.navigation.Breadcrumb'
    ],

    controller: 'main',
    viewModel: {
        type: 'mainmain'
    },
    stateId: 'main-viewport',
    stateful: true,
    layout: 'border',

    initComponent: function() {
        Ext.apply(this, {
            items: [
                {
                    region: 'north',	// #5
                    xtype: 'frameheader'
                },
                {
                    region: 'center',	// #6
                    xtype: 'contentPanel',
                    reference: 'contentPanel',  // #3
                    dockedItems: [
                        {
                            xtype: 'navigationbreadcrumb', // #4
                            reference: 'breadcrumb>'    // #5
                        }
                    ]

                },
                {
                    xtype: 'codePreview',
                    region: 'east',
                    id: 'east-region',
                    itemId: 'codePreview',
                    stateful: true,
                    stateId: 'mainnav.east',
                    split: true,
                    collapsible: true,
                    collapsed: true,
                    width: 350,
                    minWidth: 100
                }
            ]
        });
        this.callParent(arguments);
    },

    applyState: function(state) {
        this.getController().applyState(state);
    },

    getState: function() {
        return this.getController().getState();
    }

});