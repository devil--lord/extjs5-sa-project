/*
 * File: app/view/saki/databinding/ext4style/PersonFormView.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ext5.view.saki.databinding.ext4style.PersonFormView', {
    extend: 'Ext.form.Panel',
    alias: 'widget.personformview',

    requires: [
        'ext5.view.saki.databinding.ext4style.PersonFormViewViewModel'
    ],

    viewModel: {
        type: 'sakidatabindingext4stylepersonformview'
    },
    cls: 'person-form',
    height: 250,
    width: 400,
    bodyPadding: 10,
    title: 'My Form',

    initComponent: function() {
        var b = this, a = {};
        Ext.apply(a, {
            defaultType: "textfield",
            defaults: {
                anchor: "100%"
            },
            bodyPadding: 10,
            items: [{
                fieldLabel: "First Name",
                name: "fname"
            }, {
                fieldLabel: "Last Name",
                name: "lname"
            }, {
                fieldLabel: "Age",
                name: "age",
                xtype: "numberfield"
            }],
            buttons: [{
                text: "Reject",
                itemId: "reject",
                cls: "btn-reject",
                disabled:
                true,
                glyph: 61666
            }, {
                text: "Commit",
                itemId: "commit",
                glyph: 61452,
                cls: "btn-commit",
                disabled: true
            }]
        });
        Ext.apply(b, a);
        b.callParent(arguments);
    },

    loadRecord: function(a) {
        var b = this;
        if (a) {
            b.callParent([a]);
        } else {
            b.clearValues();
        }
    },

    clearValues: function() {
        var a = this;
        a.getForm()._record = null;
        a.getForm().setValues({fname: "", lname: "", age: undefined});
        a.updateUi();
    },

    commitRecord: function() {
        var b = this, a = b.getRecord();
        if (a) {
            b.updateRecord();
            a.commit();
            b.updateUi();
        }
    },

    rejectRecord: function() {
        var b = this, a = b.getRecord();
        if (a) {
            a.reject();
            b.loadRecord(a);
            b.updateUi();
        }
    },

    updateUi: function() {
        var c = this, a = c.getRecord(), b = a && a.dirty ? false : true;
        Ext.each(c.query("button"), function (d) {
            d.setDisabled(b);
        });
    }

});